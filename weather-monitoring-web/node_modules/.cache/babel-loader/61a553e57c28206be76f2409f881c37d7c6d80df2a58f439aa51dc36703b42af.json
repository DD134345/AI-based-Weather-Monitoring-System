{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\AI-based-Weather-Monitoring-System\\\\weather-monitoring-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { fetchWeatherData } from './services/weatherAPI';\nimport './assets/styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        try {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setLocation({\n            lat: latitude,\n            lon: longitude\n          });\n\n          // Fetch weather data from OpenWeatherMap\n          const weatherData = await fetchWeatherData(latitude, longitude);\n\n          // Fetch AI prediction\n          const response = await fetch(`/api/weather?lat=${latitude}&lon=${longitude}`);\n          if (!response.ok) throw new Error('Weather prediction failed');\n          const aiData = await response.json();\n\n          // Combine weather data with AI prediction\n          setWeather({\n            ...weatherData,\n            prediction: aiData.prediction\n          });\n        } catch (err) {\n          setError(err.message);\n        }\n      }, err => setError('Failed to get location: ' + err.message));\n    } else {\n      setError('Geolocation is not supported by your browser');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Monitoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weatherData: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7LkZMJUsxKnW9U6t5ZK/8fOQJSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherDisplay","fetchWeatherData","jsxDEV","_jsxDEV","App","_s","weather","setWeather","error","setError","location","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lon","weatherData","response","fetch","ok","Error","aiData","json","prediction","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/AI-based-Weather-Monitoring-System/weather-monitoring-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { fetchWeatherData } from './services/weatherAPI';\nimport './assets/styles/main.css';\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n  const [location, setLocation] = useState(null);\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          try {\n            const { latitude, longitude } = position.coords;\n            setLocation({ lat: latitude, lon: longitude });\n            \n            // Fetch weather data from OpenWeatherMap\n            const weatherData = await fetchWeatherData(latitude, longitude);\n            \n            // Fetch AI prediction\n            const response = await fetch(`/api/weather?lat=${latitude}&lon=${longitude}`);\n            if (!response.ok) throw new Error('Weather prediction failed');\n            const aiData = await response.json();\n            \n            // Combine weather data with AI prediction\n            setWeather({\n              ...weatherData,\n              prediction: aiData.prediction\n            });\n          } catch (err) {\n            setError(err.message);\n          }\n        },\n        (err) => setError('Failed to get location: ' + err.message)\n      );\n    } else {\n      setError('Geolocation is not supported by your browser');\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Weather Monitoring System</h1>\n      {error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <WeatherDisplay weatherData={weather} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAI,aAAa,IAAIa,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtC,MAAOC,QAAQ,IAAK;QAClB,IAAI;UACF,MAAM;YAAEC,QAAQ;YAAEC;UAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;UAC/CP,WAAW,CAAC;YAAEQ,GAAG,EAAEH,QAAQ;YAAEI,GAAG,EAAEH;UAAU,CAAC,CAAC;;UAE9C;UACA,MAAMI,WAAW,GAAG,MAAMpB,gBAAgB,CAACe,QAAQ,EAAEC,SAAS,CAAC;;UAE/D;UACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoBP,QAAQ,QAAQC,SAAS,EAAE,CAAC;UAC7E,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;UAC9D,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;UAEpC;UACApB,UAAU,CAAC;YACT,GAAGc,WAAW;YACdO,UAAU,EAAEF,MAAM,CAACE;UACrB,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,CAAC;QACvB;MACF,CAAC,EACAD,GAAG,IAAKpB,QAAQ,CAAC,0BAA0B,GAAGoB,GAAG,CAACC,OAAO,CAC5D,CAAC;IACH,CAAC,MAAM;MACLrB,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjC5B,KAAK,gBACJL,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEpCjC,OAAA,CAACH,cAAc;MAACqB,WAAW,EAAEf;IAAQ;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CA/CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}