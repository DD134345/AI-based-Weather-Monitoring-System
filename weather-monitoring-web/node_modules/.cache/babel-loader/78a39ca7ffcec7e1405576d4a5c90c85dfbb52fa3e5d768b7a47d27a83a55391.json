{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nexport const fetchWeatherData = async (lat, lon) => {\n  try {\n    const response = await axios.get(`${BASE_URL}`, {\n      params: {\n        lat: lat,\n        lon: lon,\n        appid: API_KEY,\n        units: 'metric'\n      }\n    });\n    const data = response.data;\n    return {\n      temperature: data.main.temp,\n      humidity: data.main.humidity,\n      pressure: data.main.pressure,\n      city: data.name,\n      country: data.sys.country,\n      description: data.weather[0].description,\n      rain: data.rain ? data.rain['1h'] : 0\n    };\n  } catch (error) {\n    console.error(\"Error fetching weather data:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_OPENWEATHER_API_KEY","BASE_URL","fetchWeatherData","lat","lon","response","get","params","appid","units","data","temperature","main","temp","humidity","pressure","city","name","country","sys","description","weather","rain","error","console"],"sources":["C:/Users/Admin/Documents/AI-based-Weather-Monitoring-System/weather-monitoring-web/src/services/weatherAPI.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_OPENWEATHER_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\nexport const fetchWeatherData = async (lat, lon) => {\n    try {\n        const response = await axios.get(`${BASE_URL}`, {\n            params: {\n                lat: lat,\n                lon: lon,\n                appid: API_KEY,\n                units: 'metric'\n            }\n        });\n\n        const data = response.data;\n        return {\n            temperature: data.main.temp,\n            humidity: data.main.humidity,\n            pressure: data.main.pressure,\n            city: data.name,\n            country: data.sys.country,\n            description: data.weather[0].description,\n            rain: data.rain ? data.rain['1h'] : 0\n        };\n    } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;AACzD,MAAMC,QAAQ,GAAG,iDAAiD;AAElE,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGL,QAAQ,EAAE,EAAE;MAC5CM,MAAM,EAAE;QACJJ,GAAG,EAAEA,GAAG;QACRC,GAAG,EAAEA,GAAG;QACRI,KAAK,EAAEX,OAAO;QACdY,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAI;IAC1B,OAAO;MACHC,WAAW,EAAED,IAAI,CAACE,IAAI,CAACC,IAAI;MAC3BC,QAAQ,EAAEJ,IAAI,CAACE,IAAI,CAACE,QAAQ;MAC5BC,QAAQ,EAAEL,IAAI,CAACE,IAAI,CAACG,QAAQ;MAC5BC,IAAI,EAAEN,IAAI,CAACO,IAAI;MACfC,OAAO,EAAER,IAAI,CAACS,GAAG,CAACD,OAAO;MACzBE,WAAW,EAAEV,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACD,WAAW;MACxCE,IAAI,EAAEZ,IAAI,CAACY,IAAI,GAAGZ,IAAI,CAACY,IAAI,CAAC,IAAI,CAAC,GAAG;IACxC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}